import json

# Define risk levels based on CVSS score
def risk_level(cvss_score):
    if cvss_score >= 9.0:
        return "Critical"
    elif cvss_score >= 7.0:
        return "High"
    elif cvss_score >= 4.0:
        return "Medium"
    else:
        return "Low"

def parse_vulnerability_data(vuln_file):
    with open(vuln_file, 'r') as f:
        vulnerabilities = json.load(f)

    for vuln in vulnerabilities:
        cvss_score = vuln.get('cvssScore', 0)
        risk = risk_level(cvss_score)
        print(f"Vulnerability: {vuln['name']}")
        print(f"CVSS Score: {cvss_score} - Risk Level: {risk}")
        print(f"Affected Host: {vuln['host']}")
        print(f"Description: {vuln['description']}")
        print("-" * 50)

if __name__ == "__main__":
    vuln_file = "vulnerabilities.json"  # File containing vulnerability data
    parse_vulnerability_data(vuln_file)
